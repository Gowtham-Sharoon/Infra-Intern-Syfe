apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: {{ .Values.wordpress.image.repository }}:{{ .Values.wordpress.image.tag }}
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql
            - name: WORDPRESS_DB_NAME
              value: {{ .Values.mysql.mysqlDatabase }}
            - name: WORDPRESS_DB_USER
              value: {{ .Values.mysql.mysqlUser }}
            - name: WORDPRESS_DB_PASSWORD
              value: {{ .Values.mysql.mysqlPassword }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: wordpress-data
              mountPath: /var/www/html
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: wp-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: {{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "{{ .Values.mysql.mysqlRootPassword }}"
            - name: MYSQL_DATABASE
              value: "{{ .Values.mysql.mysqlDatabase }}"
            - name: MYSQL_USER
              value: "{{ .Values.mysql.mysqlUser }}"
            - name: MYSQL_PASSWORD
              value: "{{ .Values.mysql.mysqlPassword }}"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: {{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /usr/local/openresty/nginx/conf/nginx.conf
              subPath: nginx.conf
            - name: lua-scripts
              mountPath: /usr/local/openresty/nginx/lua
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-config
        - name: lua-scripts
          configMap:
            name: lua-scripts

